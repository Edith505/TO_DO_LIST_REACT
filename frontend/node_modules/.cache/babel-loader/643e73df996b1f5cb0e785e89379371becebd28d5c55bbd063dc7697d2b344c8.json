{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edith\\\\Documents\\\\Code\\\\React\\\\TO_DO_LIST_REACT\\\\todo\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport AddTask from \"./AddTask\";\nimport NavBar from \"./NavBar\";\nimport initialData from \"../initialData\";\nimport { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\nimport \"../css/toDo.css\";\n\n// Fonction pour déterminer le titre selon la page courante\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getPageTitle(pathname) {\n  switch (pathname) {\n    case \"/\":\n    case \"/active\":\n      return \"📋 Liste des tâches\";\n    case \"/completed\":\n      return \"✅ Tâches terminées\";\n    case \"/add-task\":\n      return \"📝 Nouvelle tâche\";\n    default:\n      return \"📋 Liste des tâches\";\n  }\n}\n\n// Filtrage des tâches selon l'URL\nfunction useQueryFilter(tasks) {\n  _s();\n  const location = useLocation();\n  if (location.pathname === \"/completed\") {\n    return tasks.filter(t => t.completed);\n  }\n  if (location.pathname === \"/active\") {\n    return tasks.filter(t => !t.completed);\n  }\n  // Par défaut (\"/\" ou autre)\n  return tasks;\n}\n_s(useQueryFilter, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\nfunction AppWrapper() {\n  _s2();\n  const [tasks, setTasks] = React.useState(initialData);\n  const location = useLocation();\n  const filteredTasks = useQueryFilter(tasks);\n  const navigate = useNavigate();\n  const handleAddTask = name => {\n    setTasks(prev => [...prev, {\n      id: Date.now().toString(36) + Math.random().toString(36).substr(2, 5),\n      name,\n      completed: false\n    }]);\n    navigate(\"/\");\n  };\n  const handleToggleCompleted = id => {\n    setTasks(prev => prev.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const handleClearCompleted = () => {\n    setTasks(prev => prev.filter(task => !task.completed));\n  };\n\n  // Titre dynamique selon la page\n  const pageTitle = getPageTitle(location.pathname);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"todo\",\n    className: \"container py-5 mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"m-3 fw-bold display-5 text-center mb-4\",\n      children: pageTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-task\",\n        element: /*#__PURE__*/_jsxDEV(AddTask, {\n          onAddTask: handleAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: [\"/\", \"/active\", \"/completed\"],\n        element: /*#__PURE__*/_jsxDEV(ToDoList, {\n          tasks: filteredTasks,\n          onToggleCompleted: handleToggleCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      onClearCompleted: handleClearCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s2(AppWrapper, \"6Se3aNYO5kmSKhXiTq6F51FgepY=\", false, function () {\n  return [useLocation, useQueryFilter, useNavigate];\n});\n_c = AppWrapper;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"AppWrapper\");","map":{"version":3,"names":["React","ToDoList","AddTask","NavBar","initialData","Routes","Route","useNavigate","useLocation","jsxDEV","_jsxDEV","getPageTitle","pathname","useQueryFilter","tasks","_s","location","filter","t","completed","AppWrapper","_s2","setTasks","useState","filteredTasks","navigate","handleAddTask","name","prev","id","Date","now","toString","Math","random","substr","handleToggleCompleted","map","task","handleClearCompleted","pageTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onAddTask","onToggleCompleted","onClearCompleted","_c","App","$RefreshReg$"],"sources":["C:/Users/edith/Documents/Code/React/TO_DO_LIST_REACT/todo/src/components/App.js"],"sourcesContent":["import React from \"react\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport AddTask from \"./AddTask\";\r\nimport NavBar from \"./NavBar\";\r\nimport initialData from \"../initialData\";\r\nimport { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"../css/toDo.css\";\r\n\r\n// Fonction pour déterminer le titre selon la page courante\r\nfunction getPageTitle(pathname) {\r\n  switch (pathname) {\r\n    case \"/\":\r\n    case \"/active\":\r\n      return \"📋 Liste des tâches\";\r\n    case \"/completed\":\r\n      return \"✅ Tâches terminées\";\r\n    case \"/add-task\":\r\n      return \"📝 Nouvelle tâche\";\r\n    default:\r\n      return \"📋 Liste des tâches\";\r\n  }\r\n}\r\n\r\n// Filtrage des tâches selon l'URL\r\nfunction useQueryFilter(tasks) {\r\n  const location = useLocation();\r\n  if (location.pathname === \"/completed\") {\r\n    return tasks.filter(t => t.completed);\r\n  }\r\n  if (location.pathname === \"/active\") {\r\n    return tasks.filter(t => !t.completed);\r\n  }\r\n  // Par défaut (\"/\" ou autre)\r\n  return tasks;\r\n}\r\n\r\nfunction AppWrapper() {\r\n  const [tasks, setTasks] = React.useState(initialData);\r\n  const location = useLocation();\r\n  const filteredTasks = useQueryFilter(tasks);\r\n  const navigate = useNavigate();\r\n\r\n  const handleAddTask = (name) => {\r\n    setTasks(prev =>\r\n      [\r\n        ...prev,\r\n        {\r\n          id: Date.now().toString(36) + Math.random().toString(36).substr(2, 5),\r\n          name,\r\n          completed: false,\r\n        }\r\n      ]);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleToggleCompleted = (id) => {\r\n    setTasks(prev =>\r\n      prev.map(task =>\r\n        task.id === id ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleClearCompleted = () => {\r\n    setTasks(prev => prev.filter(task => !task.completed));\r\n  };\r\n\r\n  // Titre dynamique selon la page\r\n  const pageTitle = getPageTitle(location.pathname);\r\n\r\n  return (\r\n    <section id=\"todo\" className=\"container py-5 mb-5\">\r\n      <h1 className=\"m-3 fw-bold display-5 text-center mb-4\">{pageTitle}</h1>\r\n      <Routes>\r\n        <Route path=\"/add-task\" element={\r\n          <AddTask onAddTask={handleAddTask} />\r\n        } />\r\n        <Route path={[\"/\", \"/active\", \"/completed\"]} element={\r\n          <ToDoList\r\n            tasks={filteredTasks}\r\n            onToggleCompleted={handleToggleCompleted}\r\n          />\r\n        } />\r\n      </Routes>\r\n      <NavBar onClearCompleted={handleClearCompleted} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}