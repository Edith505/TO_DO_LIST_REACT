{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edith\\\\Documents\\\\Code\\\\React\\\\TO_DO_LIST_REACT\\\\todo\\\\src\\\\components\\\\ToDoList.js\";\nimport React from \"react\";\nimport ToDo from \"./ToDo\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoList = ({\n  tasks,\n  match\n}) => {\n  let filteredTasks;\n  switch (match.params.filter) {\n    case \"completed\":\n      filteredTasks = tasks.filter(task => task.completed);\n      break;\n    default:\n      filteredTasks = tasks;\n  }\n  if (filteredTasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-3 text-success fw-bold display-5 text-center mb-4\",\n        children: \"\\uD83D\\uDCCB Liste de t\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group m-3 shadow-sm rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-secondary\",\n            children: \"Aucune t\\xE2che \\xE0 afficher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"Ajoutez une nouvelle t\\xE2che pour commencer !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-3 text-success fw-bold display-5 text-center mb-4\",\n        children: \"\\uD83D\\uDCCB Liste de t\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group m-3 shadow-sm rounded\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(ToDo, {\n          task: task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","ToDo","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","tasks","match","filteredTasks","params","filter","task","completed","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["C:/Users/edith/Documents/Code/React/TO_DO_LIST_REACT/todo/src/components/ToDoList.js"],"sourcesContent":["import React from \"react\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nconst ToDoList = ({tasks, match}) => {\r\n    let filteredTasks\r\n\r\n    switch (match.params.filter) {\r\n        case \"completed\":\r\n            filteredTasks = tasks.filter(task => task.completed);\r\n            break;\r\n        default:\r\n            filteredTasks = tasks;\r\n    }\r\n    if (filteredTasks.length === 0) {\r\n        return(\r\n              <>\r\n        <h1 className=\"m-3 text-success fw-bold display-5 text-center mb-4\">📋 Liste de tâches</h1>\r\n        <ul className=\"list-group m-3 shadow-sm rounded\">\r\n          <li className=\"list-group-item text-center\">\r\n            <h2 className=\"text-secondary\">Aucune tâche à afficher</h2>\r\n            <p className=\"text-muted\">Ajoutez une nouvelle tâche pour commencer !</p> \r\n            </li>  \r\n        </ul>\r\n    </>\r\n            \r\n        )\r\n    }else {\r\n    return (\r\n    <>\r\n        <h1 className=\"m-3 text-success fw-bold display-5 text-center mb-4\">📋 Liste de tâches</h1>\r\n        <ul className=\"list-group m-3 shadow-sm rounded\">\r\n            {\r\n                tasks.map((task) => (\r\n                <ToDo key={task.id} task={task} />\r\n                ))\r\n            }\r\n        </ul>\r\n    </>\r\n    )\r\n}\r\n}\r\n\r\nexport default ToDoList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAK,CAAC,KAAK;EACjC,IAAIC,aAAa;EAEjB,QAAQD,KAAK,CAACE,MAAM,CAACC,MAAM;IACvB,KAAK,WAAW;MACZF,aAAa,GAAGF,KAAK,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;MACpD;IACJ;MACIJ,aAAa,GAAGF,KAAK;EAC7B;EACA,IAAIE,aAAa,CAACK,MAAM,KAAK,CAAC,EAAE;IAC5B,oBACMX,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACNZ,OAAA;QAAIa,SAAS,EAAC,qDAAqD;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3FjB,OAAA;QAAIa,SAAS,EAAC,kCAAkC;QAAAD,QAAA,eAC9CZ,OAAA;UAAIa,SAAS,EAAC,6BAA6B;UAAAD,QAAA,gBACzCZ,OAAA;YAAIa,SAAS,EAAC,gBAAgB;YAAAD,QAAA,EAAC;UAAuB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3DjB,OAAA;YAAGa,SAAS,EAAC,YAAY;YAAAD,QAAA,EAAC;UAA2C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,eACP,CAAC;EAGH,CAAC,MAAK;IACN,oBACAjB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACIZ,OAAA;QAAIa,SAAS,EAAC,qDAAqD;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3FjB,OAAA;QAAIa,SAAS,EAAC,kCAAkC;QAAAD,QAAA,EAExCR,KAAK,CAACc,GAAG,CAAET,IAAI,iBACfT,OAAA,CAACF,IAAI;UAAeW,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACU,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CAAC;IAAA,eACP,CAAC;EAEP;AACA,CAAC;AAAAG,EAAA,GArCKjB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}